{"version":3,"file":"876-be687618d63669a7d2d2.js","mappings":"8GAIIA,E,wCAEJ,IAsCMC,GAAQ,OAAO,QAAP,sBAAH,0EAMX,UA5CuB,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,QAAyB,MAC1C,GAA4BC,EAAAA,EAAAA,UAAS,IAA9BC,EAAP,KAAeC,EAAf,KA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WACRC,UAAUC,aACPC,aAAa,CACZC,OAAO,EACPC,MAAO,CACLC,UAAW,GACXC,OAAQ,IACRC,MAAO,OAGVC,MAAK,SAAAC,GACJjB,EAAciB,EACTf,EAASgB,UACdhB,EAASgB,QAAQC,UAAYF,MAE9BG,MAAMC,QAAQC,OAEjBC,EAAAA,EAAAA,GAAQ,OAAQjB,GAEhBiB,EAAAA,EAAAA,GAAQ,QAAQ,SAAAC,GACdA,EAAKC,OAAOzB,EAAa,CAAE0B,WAAY,aAExC,KAGD,yBACE,oBACE,QAACzB,EAAD,CAAO0B,UAAQ,EAACC,OAAK,EAACC,aAAW,EAACC,IAAK5B,MAEzC,8BAAcG","sources":["webpack://ugonf/./src/components/loadable/receive.tsx"],"sourcesContent":["import styled from \"@emotion/styled\"\nimport React, { useEffect, useRef, useState } from \"react\"\nimport { peer } from \"../../utils/skyway\"\n\nlet localStream: MediaStream\n\nconst App: React.VFC = () => {\n  const videoRef = useRef<HTMLVideoElement>(null)\n  const [peerId, setPeerId] = useState(\"\")\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({\n        audio: false,\n        video: {\n          frameRate: 30,\n          height: 480,\n          width: 640,\n        },\n      })\n      .then(stream => {\n        localStream = stream\n        if (!videoRef.current) return\n        videoRef.current.srcObject = stream\n      })\n      .catch(console.error)\n\n    peer.on(\"open\", setPeerId)\n\n    peer.on(\"call\", conn => {\n      conn.answer(localStream, { videoCodec: \"VP9\" })\n    })\n  }, [])\n\n  return (\n    <>\n      <div>\n        <Video autoPlay muted playsInline ref={videoRef} />\n      </div>\n      <div>PeerID: {peerId}</div>\n    </>\n  )\n}\n\nconst Video = styled(\"video\")`\n  background-color: #000;\n  width: 640px;\n  height: 480px;\n`\n\nexport default App\n"],"names":["localStream","Video","videoRef","useRef","useState","peerId","setPeerId","useEffect","navigator","mediaDevices","getUserMedia","audio","video","frameRate","height","width","then","stream","current","srcObject","catch","console","error","peer","conn","answer","videoCodec","autoPlay","muted","playsInline","ref"],"sourceRoot":""}